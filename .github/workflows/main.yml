# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master , development ]
  pull_request:
    branches: [ master , development ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
          
          
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
          
    - name: Navigate to Workspace
      run: cd $GITHUB_WORKSPACE

    - name: Create Build Directory
      run: mkdir _build
    
    - name: Restore Packages
      run: nuget restore UI-Cropping-Image-Library/UI-Cropping-Image-Library.sln

    - name: Build Solution
      run: |
       msbuild.exe UI-Cropping-Image-Library/UI-Cropping-Image-Library.sln /p:platform="Any CPU" /p:configuration="Release"

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
       name: EZRepBundle
       path: "./UI-Cropping-Image-Library/CroppingImageLibrary.SampleApp/bin/Release/"
     
    - name: Publish NuGet
      uses: brandedoutcast/publish-nuget@v2.5.2
      with:
       # Filepath of the project to be packaged, relative to root of repository
       PROJECT_FILE_PATH: UI-Cropping-Image-Library/CroppingImageLibrary/CroppingImageLibrary.csproj
          
          # NuGet package id, used for version detection & defaults to project name
       PACKAGE_NAME: UI-Cropping-Image
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: <Version>(.*)<\/Version>
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
       VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
       NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false

    - name: Show Content
      run: dir
      
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
